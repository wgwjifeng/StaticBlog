<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>MeeSong&#39;s Blog</title>
    <link>https://meesong.github.io/</link>
    <atom:link href="/StaticBlog/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>生活就是不断地调试~</description>
    <pubDate>Sat, 03 Sep 2016 10:43:06 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Objective-C 学习笔记</title>
      <link>https://meesong.github.io/2016/09/03/Objective-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://meesong.github.io/2016/09/03/Objective-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Sat, 03 Sep 2016 05:20:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;之前学习 Objective-C 时整理的笔记，文章内错误之处还望指点…&lt;/p&gt;
&lt;h1 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    @autoreleasepool &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// insert code here...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;Hello, World&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;#import&lt;/code&gt; 就相当于 C++ 里面的 &lt;code&gt;#include&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;@autoreleasepool &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;{...}&lt;/code&gt; 之间的语句会在被称之为 “自动释放池” 的语境中执行。&lt;/p&gt;
&lt;p&gt;自动释放池的机制是：它使得应用在创建新对象时，系统能够有效的管理应用所使用的内容。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@&amp;quot;Hello, World&amp;quot;&lt;/code&gt; 此处的 @ 符号在位于一对双引号的字符串前面，这称为常量 NSString 对象。&lt;br&gt;如果前面没有 @ 字符，就是在编写常量 C 类型的字符串。有了这个符号就是在编写 NSString 字符串对象。&lt;/p&gt;
&lt;p&gt;同 C 语言一样，Objective-C 的所有程序语句必须使用分号（;）结束。&lt;/p&gt;
&lt;p&gt;这篇文章主要是讲 Objective-C 与 C++ 的区别…&lt;br&gt;
      
      </description>
      
      <comments>https://meesong.github.io/2016/09/03/Objective-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>更改 Bash on Ubuntu on Windows 的默认 shell</title>
      <link>https://meesong.github.io/2016/08/28/%E6%9B%B4%E6%94%B9-Bash-on-Ubuntu-on-Windows-%E7%9A%84%E9%BB%98%E8%AE%A4-shell/</link>
      <guid>https://meesong.github.io/2016/08/28/%E6%9B%B4%E6%94%B9-Bash-on-Ubuntu-on-Windows-%E7%9A%84%E9%BB%98%E8%AE%A4-shell/</guid>
      <pubDate>Sun, 28 Aug 2016 15:32:15 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;引用参考 &lt;a href=&quot;http://www.howtogeek.com/258518/how-to-use-zsh-or-another-shell-in-windows-10/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;
      
      </description>
      
      <comments>https://meesong.github.io/2016/08/28/%E6%9B%B4%E6%94%B9-Bash-on-Ubuntu-on-Windows-%E7%9A%84%E9%BB%98%E8%AE%A4-shell/#disqus_thread</comments>
    </item>
    
    <item>
      <title>挖坑——开发计划</title>
      <link>https://meesong.github.io/2016/08/27/%E6%8C%96%E5%9D%91%E2%80%94%E2%80%94%E5%BC%80%E5%8F%91%E8%AE%A1%E5%88%92/</link>
      <guid>https://meesong.github.io/2016/08/27/%E6%8C%96%E5%9D%91%E2%80%94%E2%80%94%E5%BC%80%E5%8F%91%E8%AE%A1%E5%88%92/</guid>
      <pubDate>Sat, 27 Aug 2016 14:05:53 GMT</pubDate>
      <description>
      
        &lt;p&gt;先给自己挖坑，以后慢慢填…&lt;br&gt;不定期更新和补充…&lt;br&gt;
      
      </description>
      
      <comments>https://meesong.github.io/2016/08/27/%E6%8C%96%E5%9D%91%E2%80%94%E2%80%94%E5%BC%80%E5%8F%91%E8%AE%A1%E5%88%92/#disqus_thread</comments>
    </item>
    
    <item>
      <title>2016 阅读书单</title>
      <link>https://meesong.github.io/2016/08/21/2016-%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95/</link>
      <guid>https://meesong.github.io/2016/08/21/2016-%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95/</guid>
      <pubDate>Sun, 21 Aug 2016 06:29:15 GMT</pubDate>
      <description>
      
        &lt;p&gt;这里记录的都是我2016年阅读的书籍，但是各种未成书的文档就不在这里记录了…&lt;/p&gt;
      
      </description>
      
      <comments>https://meesong.github.io/2016/08/21/2016-%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>《Writing Solid Python Code》 Notes</title>
      <link>https://meesong.github.io/2016/08/02/Writing-Solid-Python-Code-Notes/</link>
      <guid>https://meesong.github.io/2016/08/02/Writing-Solid-Python-Code-Notes/</guid>
      <pubDate>Tue, 02 Aug 2016 01:44:56 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;《编写高质量代码：改善-Python-程序的-91-个建议》-学习笔记&quot;&gt;&lt;a href=&quot;#《编写高质量代码：改善-Python-程序的-91-个建议》-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;《编写高质量代码：改善 Python 程序的 91 个建议》 学习笔记&quot;&gt;&lt;/a&gt;《编写高质量代码：改善 Python 程序的 91 个建议》 学习笔记&lt;/h1&gt;&lt;p&gt;之前自己学了很多次 Python，由于用不到，所以总是学完就忘掉了。&lt;br&gt;刚好最近工作需要用到 Python，就借此机会好好学习了一番。&lt;br&gt;Pyhton 的各种特性和风格让我甚是喜欢。不过我总是感觉自己写的代码不是那么漂亮，不够 Pythonic。&lt;br&gt;所以我想通过学习一些经典建议来让我有个思路。&lt;br&gt;
      
      </description>
      
      <comments>https://meesong.github.io/2016/08/02/Writing-Solid-Python-Code-Notes/#disqus_thread</comments>
    </item>
    
    <item>
      <title>http &amp; http2  学习</title>
      <link>https://meesong.github.io/2016/07/31/http-http2-%E5%AD%A6%E4%B9%A0/</link>
      <guid>https://meesong.github.io/2016/07/31/http-http2-%E5%AD%A6%E4%B9%A0/</guid>
      <pubDate>Sun, 31 Jul 2016 03:42:35 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;HTTP-1-1&quot;&gt;&lt;a href=&quot;#HTTP-1-1&quot; class=&quot;headerlink&quot; title=&quot;HTTP 1.1&quot;&gt;&lt;/a&gt;HTTP 1.1&lt;/h1&gt;&lt;p&gt;Web 使用一种名为 HTTP(HyperText Transfer Protocol, 超文本传输协议/超文本转移协议)的协议作为规范，完成从客户端到服务端等一系列运作流程。&lt;br&gt;
      
      </description>
      
      <comments>https://meesong.github.io/2016/07/31/http-http2-%E5%AD%A6%E4%B9%A0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ArchLinux 安装笔记</title>
      <link>https://meesong.github.io/2016/07/17/ArchLinux-%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/</link>
      <guid>https://meesong.github.io/2016/07/17/ArchLinux-%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Sun, 17 Jul 2016 08:01:18 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;前提说明&quot;&gt;&lt;a href=&quot;#前提说明&quot; class=&quot;headerlink&quot; title=&quot;前提说明&quot;&gt;&lt;/a&gt;前提说明&lt;/h1&gt;&lt;p&gt;建议优先选择官方文档为参考，内容随时更新且非常详细。这里记录是包含一些自己遇到的坑。且只针对自己安装需求的情况。&lt;/p&gt;
&lt;h1 id=&quot;引用参考&quot;&gt;&lt;a href=&quot;#引用参考&quot; class=&quot;headerlink&quot; title=&quot;引用参考&quot;&gt;&lt;/a&gt;引用参考&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Beginners%27_guide_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Beginners’guide (简体中文)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Installation_guide_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Installation guide (简体中文)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://bigeagle.me/2014/06/archlinux-install-for-beginners/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;给妹子看的 Arch Linux 桌面日常安装&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.ikke.moe/posts/archlinux-installation-notes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ArchLinux 安装笔记&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/u011152627/article/details/18925121&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;寒假折腾Archlinux的一些经验（新手向）–桌面配置篇&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/u011152627/article/details/38145125&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ArchLinux使用中常见问题集锦&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;机器: DELL&lt;br&gt;BOOT: UEFI&lt;br&gt;SSD: 256G&lt;br&gt;内存: 8G&lt;br&gt;CPU: i7-6500U&lt;br&gt;安装需求：本机安装单系统&lt;br&gt;ArchLinux: Release 2016.06.01&lt;br&gt;
      
      </description>
      
      <comments>https://meesong.github.io/2016/07/17/ArchLinux-%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[2] ARK-Tool develop log : Enumerate Process &amp; Thread.</title>
      <link>https://meesong.github.io/2016/02/09/2-ARK-Tool-develop-log-Enumerate-process-thread/</link>
      <guid>https://meesong.github.io/2016/02/09/2-ARK-Tool-develop-log-Enumerate-process-thread/</guid>
      <pubDate>Tue, 09 Feb 2016 02:48:10 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;枚举-Process-amp-Thread&quot;&gt;&lt;a href=&quot;#枚举-Process-amp-Thread&quot; class=&quot;headerlink&quot; title=&quot;枚举 Process &amp;amp; Thread&quot;&gt;&lt;/a&gt;枚举 Process &amp;amp; Thread&lt;/h1&gt;&lt;p&gt;按照惯例，玩儿这些东西总是从进程开始哒，那么我们今儿就说一下枚举进程&amp;amp;线程~&lt;/p&gt;
&lt;p&gt;在R3，我们阔以用以下方法来遍历进程&amp;amp;线程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ToolHelp&lt;/li&gt;
&lt;li&gt;ZwQuerySystemInformation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是到了R0，就阔以用各种方法来实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ZwQuerySystemInformation&lt;/li&gt;
&lt;li&gt;遍历 活动进程链（PEPROCESS-&amp;gt;ActiveProcessLinks）&lt;/li&gt;
&lt;li&gt;通过 PsLookupProcessByProcessId 搜索&lt;/li&gt;
&lt;li&gt;遍历 PspCidTable 句柄表&lt;/li&gt;
&lt;/ol&gt;
      
      </description>
      
      <comments>https://meesong.github.io/2016/02/09/2-ARK-Tool-develop-log-Enumerate-process-thread/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[1] ARK-Tool develop log : Global Overloaded new &amp; delete.</title>
      <link>https://meesong.github.io/2016/02/08/1-ARK-Tool-develop-log-Global-Overloaded-new-delete/</link>
      <guid>https://meesong.github.io/2016/02/08/1-ARK-Tool-develop-log-Global-Overloaded-new-delete/</guid>
      <pubDate>Mon, 08 Feb 2016 12:02:03 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;全局重载-New-amp-Delete（DTL系列）&quot;&gt;&lt;a href=&quot;#全局重载-New-amp-Delete（DTL系列）&quot; class=&quot;headerlink&quot; title=&quot;全局重载 New &amp;amp; Delete（DTL系列）&quot;&gt;&lt;/a&gt;全局重载 New &amp;amp; Delete（DTL系列）&lt;/h1&gt;&lt;p&gt;由于在驱动层，WDK并没有提供 new 和 delete，所以我们要用内核的内存分配函数自己重载一套。&lt;/p&gt;
&lt;p&gt;new 和 delete 的重载有以下注意的地方：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;要符合 C++ 标准&lt;/li&gt;
&lt;li&gt;有 new 就要有对应的 delete&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以下 new &amp;amp; delete &lt;strong&gt;必须重载&lt;/strong&gt;，以供 C++ 基本使用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一般形式&lt;/li&gt;
&lt;li&gt;数组形式&lt;/li&gt;
&lt;li&gt;placement new&lt;/li&gt;
&lt;li&gt;用于类对象的 delete&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;重载 operator new 的参数个数是可以任意的 , 只需要保证第一个参数为 size_t, 返回类型为 void * 即可 , 而且其重载的参数类型也不必包含自定义类型 . 更一般的说 , operator new 的重载更像是一个函数的重载 , 而不是一个操作符的重载。&lt;/p&gt;
      
      </description>
      
      <comments>https://meesong.github.io/2016/02/08/1-ARK-Tool-develop-log-Global-Overloaded-new-delete/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[0] ARK-Tool develop log : 前言</title>
      <link>https://meesong.github.io/2016/02/08/0-ARK-Tool-develop-log-%E5%89%8D%E8%A8%80/</link>
      <guid>https://meesong.github.io/2016/02/08/0-ARK-Tool-develop-log-%E5%89%8D%E8%A8%80/</guid>
      <pubDate>Mon, 08 Feb 2016 09:24:33 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;声明：这一系列文章是我边学边写，内容不免会有错误，望指出不足，希望能够共同提高~么么哒~&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;写一款自己的ARK工具的怨念已经产生很久了，一直拖拖拉拉到现在终于行动起来。&lt;/p&gt;
&lt;p&gt;原因无非如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;学习&lt;/li&gt;
&lt;li&gt;装13，（ 哈哈哈哈哈~&lt;/li&gt;
&lt;li&gt;给自己的作品库填点儿玩具&lt;/li&gt;
&lt;/ol&gt;
      
      </description>
      
      <comments>https://meesong.github.io/2016/02/08/0-ARK-Tool-develop-log-%E5%89%8D%E8%A8%80/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
